name: Deploy to Amazon ECS

on:
  workflow_dispatch:

env:
  AWS_REGION: ${{ vars.AWS_REGION }} 
  ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}

permissions:
  contents: read

jobs:
  lint-and-test-deploy:
    name: Lint & Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Install uv
      uses: astral-sh/setup-uv@v5
    
    - name: Install the project
      run: uv sync --all-extras --dev
        
    - name: Run lint
      run: uv run ruff check .

    - name: Run tests
      run: uv run pytest

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
